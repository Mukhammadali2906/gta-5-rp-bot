import TelegramBot from "node-telegram-bot-api"
import dotenv from "dotenv"
import cron from "node-cron"
import {registerFarmBpCommand} from "./commands/farmBp"
import {registerBpCalculationCommand, sendDailyBpReport} from "./commands/bpCalculation"
import {startCommand} from "./commands/start"
import {clearAllFarmStates, getAllUserIds, loadUserData} from "./storage/telegramStorage"
import {userDataCommand} from "./commands/userData"

dotenv.config()

const TOKEN = process.env.BOT_TOKEN!
const ADMIN_CHAT_ID = Number(process.env.ADMIN_CHAT_ID!)
const bot = new TelegramBot(TOKEN, {polling: true})

// === –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===
loadUserData(bot, ADMIN_CHAT_ID).then(() => {
    startCommand(bot, ADMIN_CHAT_ID)
    userDataCommand(bot, ADMIN_CHAT_ID)
    registerFarmBpCommand(bot)
    registerBpCalculationCommand(bot)

    // === üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 7:00 —É—Ç—Ä–∞ ===
    // "0 9 * * *
    // */1 * * * *"
    cron.schedule("0 7 * * *", async () => {
        console.log("‚è∞ –ê–≤—Ç–æ–æ—Ç—á—ë—Ç –∑–∞ –¥–µ–Ω—å (–ø–æ –ú–æ—Å–∫–≤–µ)...")

        const userIds = getAllUserIds() // —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ userId –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        for (const uid of userIds) {
            try {
                // –≤—ã—á–∏—Å–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç BP –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç
                await sendDailyBpReport(bot, uid)
            } catch (err) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á—ë—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${uid}:`, err)
            }
        }

        // –ü–æ—Å–ª–µ –æ—Ç—á—ë—Ç–∞ ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
        clearAllFarmStates()
        console.log("‚úÖ –í—Å–µ farmState –æ—á–∏—â–µ–Ω—ã –ø–æ—Å–ª–µ –æ—Ç—á—ë—Ç–∞")
    }, {
        timezone: "Europe/Moscow",
    })
})

console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
