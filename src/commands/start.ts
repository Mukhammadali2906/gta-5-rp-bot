import TelegramBot from "node-telegram-bot-api"
import fs from "fs"
import {getUserData, hasUser, saveUserData} from "../storage/telegramStorage"
import {startBpCalculationFlow} from "./bpCalculation"
import {startFarmBpFlow} from "./farmBp"

export function startCommand(bot: TelegramBot, adminId: number) {
    bot.onText(/^\/start$/, async (msg) => {
        const chatId = msg.chat.id
        const firstName = msg.from?.first_name || "–¥—Ä—É–≥"
        const username = msg.from?.username ? `@${msg.from.username}` : ""

        const user = getUserData(chatId)

        // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        const isNewUser = !hasUser(chatId)
        if (isNewUser) {
            user.name = firstName
            user.username = username
            user.joinedAt = new Date().toISOString()
            await saveUserData(bot, adminId)
        }

        // –ï—Å–ª–∏ —è–∑—ã–∫ –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–Ω ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å
        if (!user.language) {
            const keyboard: TelegramBot.InlineKeyboardMarkup = {
                inline_keyboard: [
                    [
                        {text: "üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data: "lang_ru"},
                        {text: "üá∫üáø O‚Äòzbekcha", callback_data: "lang_uz"},
                    ],
                ],
            }

            await bot.sendMessage(chatId, "üåê –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang:", {
                reply_markup: keyboard,
            })
            return
        }

        // –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
        sendMainMenu(bot, chatId, user.language, firstName, adminId)
    })

    // === –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π inline-–∫–Ω–æ–ø–æ–∫ ===
    bot.on("callback_query", async (callbackQuery) => {
        const msg = callbackQuery.message
        if (!msg) return
        const chatId = msg.chat.id
        const data = callbackQuery.data

        const user = getUserData(chatId)
        await bot.answerCallbackQuery(callbackQuery.id)

        if (data === "lang_ru" || data === "lang_uz") {
            user.language = data === "lang_ru" ? "ru" : "uz"
            await saveUserData(bot, adminId)
            await bot.sendMessage(
                chatId,
                user.language === "ru"
                    ? "‚úÖ –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: –†—É—Å—Å–∫–∏–π"
                    : "‚úÖ Til saqlandi: O‚Äòzbekcha"
            )
            return sendMainMenu(bot, chatId, user.language, user.name, adminId)
        }

        switch (data) {
            case "bp_calculation":
                startBpCalculationFlow(bot, chatId)
                break
            case "farm_bp":
                startFarmBpFlow(bot, chatId)
                break
            case "user_data_list":
                if (chatId === adminId) {
                    const filePath = "./userData.json"
                    if (fs.existsSync(filePath)) {
                        await bot.sendDocument(chatId, filePath, {
                            caption: "üì¶ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                        })
                    } else {
                        await bot.sendMessage(chatId, "‚ö†Ô∏è –§–∞–π–ª userData.json –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω.")
                    }
                } else {
                    await bot.sendMessage(chatId, "‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ")
                }
                break
        }
    })
}

function sendMainMenu(
    bot: TelegramBot,
    chatId: number,
    lang: "ru" | "uz",
    firstName: string,
    adminId: number
) {
    const text =
        lang === "ru"
            ? `üëã –ü—Ä–∏–≤–µ—Ç, ${firstName}!\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å üëá`
            : `üëã Salom, ${firstName}!\nQuyidagi harakatlardan birini tanlang üëá`

    const keyboard: TelegramBot.InlineKeyboardMarkup = {
        inline_keyboard: [
            [
                {
                    text: lang === "ru" ? "üåæ –§–∞—Ä–º BP" : "üåæ BP fermasi",
                    callback_data: "farm_bp",
                },
                {
                    text: lang === "ru" ? "üìà –†–∞—Å—Å—á–∏—Ç–∞—Ç—å BP" : "üìà BP hisoblash",
                    callback_data: "bp_calculation",
                },
            ],
        ],
    }

    if (chatId === adminId) {
        keyboard.inline_keyboard.push([
            {
                text:
                    lang === "ru"
                        ? "üì¶ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
                        : "üì¶ Foydalanuvchilar ma‚Äôlumotlari",
                callback_data: "user_data_list",
            },
        ])
    }

    bot.sendMessage(chatId, text, {reply_markup: keyboard})
}
